name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run validation suite
        run: npm run validate

      - name: Check build
        run: npm run build

      - name: Dry run package
        run: npm pack --dry-run

      - name: Run security audit (moderate)
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Check for high vulnerabilities
        run: |
          if npm audit --audit-level high; then
            echo "‚úÖ No high-severity vulnerabilities found"
          else
            echo "‚ö†Ô∏è High-severity vulnerabilities detected"
            exit 1
          fi

      - name: Check bundle size (ESM & CJS)
        run: |
          set -euo pipefail

          ESM_FILE="dist/esm/index.js"
          CJS_FILE="dist/cjs/index.cjs"

          for FILE in "$ESM_FILE" "$CJS_FILE"; do
            if [ ! -f "$FILE" ]; then
              echo "‚ùå Missing build artifact: $FILE"
              exit 1
            fi
          done

          ESM_SIZE=$(stat -c%s "$ESM_FILE")
          CJS_SIZE=$(stat -c%s "$CJS_FILE")
          ESM_KB=$((ESM_SIZE / 1024))
          CJS_KB=$((CJS_SIZE / 1024))

          echo "ESM size: ${ESM_KB}KB  (${ESM_FILE})"
          echo "CJS size: ${CJS_KB}KB  (${CJS_FILE})"

          THRESHOLD_KB=100
          FAIL=0
          if [ $ESM_KB -gt $THRESHOLD_KB ]; then
            echo "‚ö†Ô∏è ESM exceeds ${THRESHOLD_KB}KB (${ESM_KB}KB)"
            FAIL=1
          fi
          if [ $CJS_KB -gt $THRESHOLD_KB ]; then
            echo "‚ö†Ô∏è CJS exceeds ${THRESHOLD_KB}KB (${CJS_KB}KB)"
            FAIL=1
          fi

          if [ $FAIL -eq 1 ]; then
            exit 1
          else
            echo "‚úÖ Bundle sizes are acceptable"
          fi

      - name: Comment PR Result
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const status = "${{ job.status }}";
            const succeeded = status === "success";
            const message = succeeded
              ? '‚úÖ **All checks passed!** \n\n- Type checking: ‚úÖ\n- Linting: ‚úÖ\n- Tests: ‚úÖ\n- Build: ‚úÖ\n- Security audit: ‚úÖ\n- Bundle size: ‚úÖ\n\nReady for review! üöÄ'
              : '‚ùå **Some checks failed** \n\nPlease review the workflow logs and fix the issues before requesting review.';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
